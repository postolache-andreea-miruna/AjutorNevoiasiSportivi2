// <auto-generated />
using System;
using AjutorNevoiasiSportivi2.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AjutorNevoiasiSportivi2.Migrations
{
    [DbContext(typeof(AjutorNevoiasiSportivi2Context))]
    partial class AjutorNevoiasiSportivi2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumarAp")
                        .HasColumnType("int");

                    b.Property<int>("NumarBloc")
                        .HasColumnType("int");

                    b.Property<string>("NumeStrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TalentatNevoiasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TalentatNevoiasId")
                        .IsUnique();

                    b.ToTable("Adrese");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Antrenor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AniExperienta")
                        .HasColumnType("int");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeAntrenor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenumeAntrenor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("SportId");

                    b.ToTable("Antrenori");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cluburi");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Competitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Importanta")
                        .HasColumnType("int");

                    b.Property<string>("NumeCompetitie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competitii");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Donare", b =>
                {
                    b.Property<int>("DonatorId")
                        .HasColumnType("int");

                    b.Property<int>("TalentatNevoiasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDonatie")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElementDonat")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConfirmarePrimire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonatorId", "TalentatNevoiasId", "DataDonatie", "ElementDonat");

                    b.HasIndex("TalentatNevoiasId");

                    b.ToTable("Donari");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Donator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeDonator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenumeDonator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donatori");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Inscriere", b =>
                {
                    b.Property<int>("TalentatNevoiasId")
                        .HasColumnType("int");

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataStart")
                        .HasColumnType("datetime2");

                    b.HasKey("TalentatNevoiasId", "AntrenorId", "DataStart");

                    b.HasIndex("AntrenorId");

                    b.ToTable("Inscrieri");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.IstoricParticipare", b =>
                {
                    b.Property<int>("TalentatNevoiasId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitieId")
                        .HasColumnType("int");

                    b.Property<int>("ProbaId")
                        .HasColumnType("int");

                    b.Property<int>("LocClasament")
                        .HasColumnType("int");

                    b.Property<bool>("Medaliat")
                        .HasColumnType("bit");

                    b.Property<int>("TimpObtinut")
                        .HasColumnType("int");

                    b.HasKey("TalentatNevoiasId", "CompetitieId", "ProbaId");

                    b.HasIndex("CompetitieId");

                    b.HasIndex("ProbaId");

                    b.ToTable("IstoricParticipari");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Proba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NumeProba")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Probe");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NumeSport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sporturi");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataNastere")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeAjutat")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("NumeNevoias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenumeNevoias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportTalent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TalentatNevoiasi");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Adresa", b =>
                {
                    b.HasOne("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", "TalentatNevoias")
                        .WithOne("Adresa")
                        .HasForeignKey("AjutorNevoiasiSportivi2.Entities.Adresa", "TalentatNevoiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TalentatNevoias");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Antrenor", b =>
                {
                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Club", "Club")
                        .WithMany("Antrenori")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Sport", "Sport")
                        .WithMany("Antrenori")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Donare", b =>
                {
                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Donator", "Donator")
                        .WithMany("Donari")
                        .HasForeignKey("DonatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", "TalentatNevoias")
                        .WithMany("Donari")
                        .HasForeignKey("TalentatNevoiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donator");

                    b.Navigation("TalentatNevoias");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Inscriere", b =>
                {
                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Antrenor", "Antrenor")
                        .WithMany("Inscrieri")
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", "TalentatNevoias")
                        .WithMany("Inscrieri")
                        .HasForeignKey("TalentatNevoiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antrenor");

                    b.Navigation("TalentatNevoias");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.IstoricParticipare", b =>
                {
                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Competitie", "Competitie")
                        .WithMany("IstoricParticipari")
                        .HasForeignKey("CompetitieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjutorNevoiasiSportivi2.Entities.Proba", "Proba")
                        .WithMany("IstoricParticipari")
                        .HasForeignKey("ProbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", "TalentatNevoias")
                        .WithMany("IstoricParticipari")
                        .HasForeignKey("TalentatNevoiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competitie");

                    b.Navigation("Proba");

                    b.Navigation("TalentatNevoias");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Antrenor", b =>
                {
                    b.Navigation("Inscrieri");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Club", b =>
                {
                    b.Navigation("Antrenori");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Competitie", b =>
                {
                    b.Navigation("IstoricParticipari");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Donator", b =>
                {
                    b.Navigation("Donari");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Proba", b =>
                {
                    b.Navigation("IstoricParticipari");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.Sport", b =>
                {
                    b.Navigation("Antrenori");
                });

            modelBuilder.Entity("AjutorNevoiasiSportivi2.Entities.TalentatNevoias", b =>
                {
                    b.Navigation("Adresa")
                        .IsRequired();

                    b.Navigation("Donari");

                    b.Navigation("Inscrieri");

                    b.Navigation("IstoricParticipari");
                });
#pragma warning restore 612, 618
        }
    }
}
